
import App from './App.uvue'

import { createSSRApp } from 'vue'
export function createApp() {
	const app = createSSRApp(App)
	return {
		app
	}
}  
export function main(app: IApp) {
    defineAppConfig();
    definePageRoutes();
    
    (createApp()['app'] as VueApp).mount(app);
}

import { AppConfig } from "io.dcloud.uniapp.appframe"
export class UniAppConfig extends AppConfig {
    override name: string = "uts-udp-uni-app-x-demo"
    override appid: string = "__UNI__BC1FF7C"
    override versionName: string = "1.0.0"
    override versionCode: string = "100"
    override uniCompileVersion: string = "3.98"
    // override tabBar = __uniTabBar
    // override launchPage = __uniLaunchPage
    
    constructor() {}
}

import GenPagesServerClass from './pages/server.uvue?type=page'
import GenPagesClientClass from './pages/client.uvue?type=page'
function definePageRoutes() {
__uniRoutes.push({ path: "pages/server", component: GenPagesServerClass, meta: { isQuit: true } as PageMeta, style: utsMapOf([["navigationBarTitleText","客户端"]]) } as PageRoute)
__uniRoutes.push({ path: "pages/client", component: GenPagesClientClass, meta: { isQuit: false } as PageMeta, style: utsMapOf([["navigationBarTitleText","客户端"]]) } as PageRoute)
}
const __uniTabBar: Map<string, any | null> | null = utsMapOf([["list",[utsMapOf([["text","服务端"],["pagePath","pages/server"]]),utsMapOf([["text","客户端"],["pagePath","pages/client"]])]]])
const __uniLaunchPage: Map<string, any | null> = utsMapOf([["url","pages/server"],["style",utsMapOf([["navigationBarTitleText","客户端"]])]])
@Suppress("UNCHECKED_CAST")
function defineAppConfig(){
  __uniConfig.entryPagePath = '/pages/server'
  __uniConfig.globalStyle = utsMapOf([["navigationBarTextStyle","black"],["navigationBarTitleText","uni-app x"],["navigationBarBackgroundColor","#F8F8F8"],["backgroundColor","#F8F8F8"]])
  __uniConfig.tabBar = __uniTabBar as Map<string, any> | null
  __uniConfig.conditionUrl = ''
  __uniConfig.uniIdRouter = new Map()
}
